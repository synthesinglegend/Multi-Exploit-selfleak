#pragma once
#include <fstream>
#include "AES.h"
unsigned char* readInBytes(const std::string, size_t&);
void writeOutBytes(std::string, const unsigned char*, const size_t&);
void decryptAES(unsigned char*&, const size_t, unsigned char*);
void encryptAES(unsigned char*&, size_t&, unsigned char*);
void decryptXOR(unsigned char*, const size_t, const unsigned char*);
class dec_data {
public:
	dec_data();
	~dec_data();
	void openfile();
	void savefile();
	void EncryptData();
	void DecryptData();
	void StartDecryptThread();
	void StartEncryptThread();
private:
	bool isEncrypted = false;
	unsigned char* fileBytes = NULL;
	size_t arrLength = 0;
	unsigned char* aesKey = new unsigned char[16] { 0x27, 0x99, 0x77, 0xf6, 0x2f, 0x6c, 0xfd, 0x2d, 0x91, 0xcd, 0x75, 0xb8, 0x89, 0xce, 0x0c, 0x9a };
	unsigned char* xorKey = new unsigned char[4] { 0x73, 0x8B, 0x55, 0x44 };
};